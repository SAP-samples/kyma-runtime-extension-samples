apiVersion: serverless.kyma-project.io/v1alpha1
kind: Function
metadata:
  name: seed-db
  labels:
    app: seed-db
spec:
  deps: "{ \n  \"name\": \"seed-db\",\n  \"version\": \"1.0.0\",\n  \"dependencies\":
    {\n      \"mssql\": \"6.2.0\"\n  }\n}"
  source: "const sql = require('mssql')\n\nconst config = {\n    user: process.env.username,\n
    \   password: process.env.password,\n    server: process.env.host, \n    database:
    process.env.database,\n}\n\nmodule.exports = { \n  main: async function (event,
    context) {\n    \n    try {\n      const pool = await sql.connect(config)\n      const
    request = new sql.Request()\n      \n      const createTableResult = await createOrdersTable(request);\n
    \     console.log(createTableResult);\n      const createSampleResult = await
    addSampleOrders(request);\n      console.log(createSampleResult);\n      return
    \"database has been initialized....\";\n    } catch (err) {\n        // ... error
    checks\n        console.log(\"ERROR catch: \", err);\n        event.extensions.response.status(500).json({\"message\":
    \"An error occurred during execution\", \"error\": err});\n    }\n    \n    sql.on('error',
    err => {\n      // ... error handler\n      console.log(\"ERROR handler: \", error);\n
    \     event.extensions.response.status(500).json({\"message\": \"Connection to
    the database could not be established\", \"error\": err});\n    })\n  }\n}\n\nasync
    function createOrdersTable(request){\n  let createOrders = `create table Orders(\n
    \                     order_id nvarchar(50) NOT NULL PRIMARY KEY,\n                      description
    nvarchar(255),\n                      created DATETIME DEFAULT(getdate())\n  )`;\n
    \ let result = await request.query(createOrders);\n  return result;\n}\n\nasync
    function addSampleOrders(request){\n  let result = await request.query(`insert
    into Orders (order_id, description) values ('10000001', 'Sample Order 1'); insert
    into Orders (order_id, description) values ('10000002', 'Sample Order 2')`);\n
    \ return result;\n}\n"
---
apiVersion: gateway.kyma-project.io/v1alpha1
kind: APIRule
metadata:
  name: seed-db
  labels:
    app: seed-db
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  rules:
    - path: /.*
      accessStrategies:
        - config: {}
          handler: noop
      methods:
        - GET
  service:
    host: seed-db
    name: seed-db
    port: 80

---
swagger: "2.0"
info:
  description: These services manage all of the common commerce functionality, and
    also include customizations from installed AddOns. The implementing extension
    is called ycommercewebservices.
  version: "2.0"
  title: Commerce Webservices
  license:
    name: Use of this file is subject to the terms of your agreement with SAP SE or
      its affiliates respecting the use of the SAP product for which this file relates.
host: hostname
basePath: /rest/v2
tags:
- name: Address
  description: Address Controller
- name: Base Sites
  description: Base Sites Controller
- name: Base Stores
  description: Base Stores Controller
- name: Carts
  description: Carts Controller
- name: Catalogs
  description: Catalogs Controller
- name: Consents
  description: Consents Controller
- name: Countries
  description: Countries Controller
- name: Customer Groups
  description: Customer Groups Controller
- name: Export
  description: Export Controller
- name: Extended Carts
  description: Extended Carts Controller
- name: Feeds
  description: Feeds Controller
- name: Forgotten Passwords
  description: Forgotten Passwords Controller
- name: Merchant Callback
  description: Merchant Callback Controller
- name: Miscs
  description: Miscs Controller
- name: Orders
  description: Orders Controller
- name: Payment Details
  description: Payment Details Controller
- name: Payment Modes
  description: Payment Modes Controller
- name: Products
  description: Products Controller
- name: Promotions
  description: Promotions Controller
- name: Save Cart
  description: Save Cart Controller
- name: Stores
  description: Stores Controller
- name: Users
  description: Users Controller
- name: Vouchers
  description: Vouchers Controller
produces:
- application/json
- application/xml
paths:
  /basesites:
    get:
      tags:
      - Base Sites
      summary: Get all base sites.
      description: Get all base sites with corresponding base stores details in FULL
        mode.
      operationId: getBaseSites
      parameters:
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BaseSiteList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/basestores/{baseStoreUid}:
    get:
      tags:
      - Base Stores
      summary: Get a base store.
      description: Returns details of a specific base store based on its identifier.
        The response contains detailed base store information.
      operationId: getBaseStore
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: baseStoreUid
        in: path
        description: Base store name
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BaseStore'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/cardtypes:
    get:
      tags:
      - Miscs
      summary: Get a list of supported payment card types.
      description: Lists supported payment card types.
      operationId: getCardTypes
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CardTypeList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/catalogs:
    get:
      tags:
      - Catalogs
      summary: Get a list of catalogs
      description: Returns all catalogs with versions defined for the base store.
      operationId: getCatalogs
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CatalogList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/catalogs/{catalogId}:
    get:
      tags:
      - Catalogs
      summary: Get a catalog
      description: Returns information about a catalog based on its ID, along with
        the versions defined for the current base store.
      operationId: getCatalog
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: catalogId
        in: path
        description: Catalog identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Catalog'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}:
    get:
      tags:
      - Catalogs
      summary: Get information about catalog version
      description: Returns information about the catalog version that exists for the
        current base store.
      operationId: getCatalogVersion
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: catalogId
        in: path
        description: Catalog identifier
        required: true
        type: string
      - name: catalogVersionId
        in: path
        description: Catalog version identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CatalogVersion'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}:
    get:
      tags:
      - Catalogs
      summary: Get information about catagory in a catalog version
      description: Returns information about a specified category that exists in a
        catalog version available for the current base store.
      operationId: getCategories
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: catalogId
        in: path
        description: Catalog identifier
        required: true
        type: string
      - name: catalogVersionId
        in: path
        description: Catalog version identifier
        required: true
        type: string
      - name: categoryId
        in: path
        description: Category identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CategoryHierarchy'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/countries:
    get:
      tags:
      - Countries
      summary: Get a list of countries.
      description: If the value of type equals to shipping, then return shipping countries.
        If the value of type equals to billing, then return billing countries. If
        the value of type is not given, return all countries. The list is sorted alphabetically.
      operationId: getCountries
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: type
        in: query
        description: The type of countries.
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - SHIPPING
        - BILLING
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CountryList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/countries/{countyIsoCode}/regions:
    get:
      tags:
      - Countries
      summary: Fetch the list of regions for the provided country.
      description: Lists all regions.
      operationId: getCountryRegions
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: countyIsoCode
        in: path
        description: An ISO code for a country
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RegionList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/currencies:
    get:
      tags:
      - Miscs
      summary: Get a list of available currencies.
      description: Lists all available currencies (all usable currencies for the current
        store). If the list of currencies for a base store is empty, a list of all
        currencies available in the system is returned.
      operationId: getCurrencies
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CurrencyList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/customergroups:
    get:
      tags:
      - Customer Groups
      summary: Get all subgroups of a customergroup.
      description: |-
        Returns all customer groups that are direct subgroups of a customergroup.

        To try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.
      operationId: getCustomerGroups
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: currentPage
        in: query
        description: Current page number (starts with 0).
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: BASIC
      - name: pageSize
        in: query
        description: Number of customer group returned in one page.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserGroupList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Customer Groups
      summary: Creates a new customer group.
      description: |-
        Creates a new customer group that is a direct subgroup of a customergroup.

        To try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.
      operationId: createCustomerGroup
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: userGroup
        description: User group object with id and name.
        required: true
        schema:
          $ref: '#/definitions/UserGroup'
      responses:
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/customergroups/{groupId}:
    get:
      tags:
      - Customer Groups
      summary: Get a specific customer group.
      description: |-
        Returns a customer group with a specific groupId.

        To try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.
      operationId: getCustomerGroup
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: BASIC
      - name: groupId
        in: path
        description: Group identifier.
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/customergroups/{groupId}/members:
    put:
      tags:
      - Customer Groups
      summary: Sets members for a user group.
      description: |-
        Sets members for a user group. The list of existing members is overwritten with a new one.

        To try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.
      operationId: replaceUsersForCustomerGroup
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: groupId
        in: path
        description: Group identifier.
        required: true
        type: string
      - in: body
        name: members
        description: List of users to set for customer group.
        required: true
        schema:
          $ref: '#/definitions/MemberList'
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    patch:
      tags:
      - Customer Groups
      summary: Assigns user(s) to a customer group.
      description: |-
        Assigns user(s) to a customer group.

        To try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.
      operationId: updateCustomerGroupWithUsers
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: groupId
        in: path
        description: Group identifier.
        required: true
        type: string
      - in: body
        name: members
        description: List of users to assign to customer group.
        required: true
        schema:
          $ref: '#/definitions/MemberList'
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/customergroups/{groupId}/members/{userId}:
    delete:
      tags:
      - Customer Groups
      summary: Deletes a user from a customer group.
      description: |-
        Deletes user from a customer group.

        To try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.
      operationId: removeUsersFromCustomerGroup
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: groupId
        in: path
        description: Group identifier.
        required: true
        type: string
      - name: userId
        in: path
        description: User identifier.
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/deliverycountries:
    get:
      tags:
      - Miscs
      summary: Get a list of shipping countries.
      description: Lists all supported delivery countries for the current store. The
        list is sorted alphabetically.
      operationId: getDeliveryCountries
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CountryList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: true
  /{baseSiteId}/export/products:
    get:
      tags:
      - Export
      summary: Get a list of product exports.
      description: Used for product export. Depending on the timestamp parameter,
        it can return all products or only products modified after the given time.
      operationId: getExportedProducts
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: catalog
        in: query
        description: The catalog to retrieve products from. The catalog must be provided
          along with the version.
        required: false
        type: string
        allowEmptyValue: false
      - name: currentPage
        in: query
        description: The current result page requested.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: pageSize
        in: query
        description: The number of results returned per page.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      - name: timestamp
        in: query
        description: When this parameter is set, only products modified after the
          given time will be returned. This parameter should be in ISO-8601 format
          (for example, 2018-01-09T16:28:45+0000).
        required: false
        type: string
        allowEmptyValue: false
      - name: version
        in: query
        description: The catalog version. The catalog version must be provided along
          with the catalog.
        required: false
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/feeds/orders/statusfeed:
    get:
      tags:
      - Feeds
      summary: Get a list of orders with status updates.
      description: Returns the orders that have changed status. Returns only the elements
        from the current baseSite that have been updated after the provided timestamp.
      operationId: getOrderStatusFeed
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: timestamp
        in: query
        description: Only items newer than the given parameter are retrieved. This
          parameter should be in ISO-8601 format (for example, 2018-01-09T16:28:45+0000).
        required: true
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrderStatusUpdateElementList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/forgottenpasswordtokens:
    post:
      tags:
      - Forgotten Passwords
      summary: Generates a token to restore a customer's forgotten password.
      description: Generates a token to restore a customer's forgotten password.
      operationId: doRestorePassword
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: userId
        in: query
        description: Customer's user id. Customer user id is case insensitive.
        required: true
        type: string
        allowEmptyValue: false
      responses:
        201:
          description: Created
        202:
          description: Accepted
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/integration/merchant_callback:
    post:
      tags:
      - Merchant Callback
      summary: Verify the decision of the Merchant
      description: "Verifies the decision of the merchant. \n\nNote, the “Try it out”\
        \ button is not enabled for this method (always returns an error) because\
        \ the Merchant Callback Controller handles parameters differently, depending\
        \ on which payment provider is used. For more information about this controller,\
        \ please refer to the “acceleratorwebservicesaddon AddOn” documentation on\
        \ help.hybris.com."
      operationId: doHandleMerchantCallback
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/integration/users/{userId}/carts/{cartId}/payment/sop/response:
    post:
      tags:
      - Merchant Callback
      summary: Verify the decision of the Merchant for a cart
      description: "Verifies the decision of the merchant for a specified cart, and\
        \ stores information of the PaymentSubscriptionResult for the cart. \n\nNote,\
        \ the “Try it out” button is not enabled for this method (always returns an\
        \ error) because the Merchant Callback Controller handles parameters differently,\
        \ depending on which payment provider is used. For more information about\
        \ this controller, please refer to the “acceleratorwebservicesaddon AddOn”\
        \ documentation on help.hybris.com."
      operationId: doHandleCartMerchantCallback
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/languages:
    get:
      tags:
      - Miscs
      summary: Get a list of available languages.
      description: Lists all available languages (all languages used for a particular
        store). If the list of languages for a base store is empty, a list of all
        languages available in the system will be returned.
      operationId: getLanguages
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LanguageList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/orders/{code}:
    get:
      tags:
      - Orders
      summary: Get a order.
      description: Returns details of a specific order based on the order GUID (Globally
        Unique Identifier) or the order CODE. The response contains detailed order
        information.
      operationId: getOrder
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: code
        in: path
        description: Order GUID (Globally Unique Identifier) or order CODE
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Order'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/paymentmodes:
    get:
      tags:
      - Payment Modes
      summary: Gets all available payment modes.
      description: Gets all payment modes defined for the base store.
      operationId: getPaymentModes
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentModeList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/expressupdate:
    get:
      tags:
      - Products
      summary: Get products added to the express update feed.
      description: Returns products added to the express update feed. Returns only
        elements updated after the provided timestamp. The queue is cleared using
        a defined cronjob.
      operationId: getExpressUpdateProducts
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: catalog
        in: query
        description: 'Only products from this catalog are returned. Format: catalogId:catalogVersion'
        required: false
        type: string
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: timestamp
        in: query
        description: Only items newer than the given parameter are retrieved from
          the queue. This parameter should be in ISO-8601 format.
        required: true
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductExpressUpdateElementList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/search:
    get:
      tags:
      - Products
      summary: Get a list of products and additional data
      description: Returns a list of products and additional data, such as available
        facets, available sorting, and pagination options. It can also include spelling
        suggestions. To make spelling suggestions work, you need to make sure that
        "enableSpellCheck" on the SearchQuery is set to "true" (by default, it should
        already be set to "true"). You also need to have indexed properties configured
        to be used for spellchecking.
      operationId: getProducts
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: currentPage
        in: query
        description: The current result page requested.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: pageSize
        in: query
        description: The number of results returned per page.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      - name: query
        in: query
        description: 'Serialized query, free text search, facets. The format of a
          serialized query: freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2'
        required: false
        type: string
        allowEmptyValue: false
      - name: searchQueryContext
        in: query
        description: The context to be used in the search query.
        required: false
        type: string
        allowEmptyValue: false
      - name: sort
        in: query
        description: Sorting method applied to the return results.
        required: false
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductSearchPage'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    head:
      tags:
      - Products
      summary: Get a header with total number of products.
      description: In the response header, the "x-total-count" indicates the total
        number of products satisfying a query.
      operationId: countProducts
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: query
        in: query
        description: 'Serialized query, free text search, facets. The format of a
          serialized query: freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2'
        required: false
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/suggestions:
    get:
      tags:
      - Products
      summary: Get a list of available suggestions
      description: Returns a list of all available suggestions related to a given
        term and limits the results to a specific value of the max parameter.
      operationId: getSuggestions
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: max
        in: query
        description: Specifies the limit of results.
        required: false
        type: integer
        default: 10
        format: int32
        allowEmptyValue: false
      - name: term
        in: query
        description: Specified term
        required: true
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SuggestionList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/{productCode}:
    get:
      tags:
      - Products
      summary: Get product details.
      description: Returns details of a single product according to a product code.
      operationId: getProduct
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Product'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/{productCode}/references:
    get:
      tags:
      - Products
      summary: Get a product reference
      description: Returns references for a product with a given product code. Reference
        type specifies which references to return.
      operationId: getProductReferences
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: pageSize
        in: query
        description: Maximum size of returned results.
        required: false
        type: integer
        default: 2147483647
        format: int32
        allowEmptyValue: false
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      - name: referenceType
        in: query
        description: Comma-separated list of reference types according to enum ProductReferenceTypeEnum.
          If not specified, all types of product references will be used.
        required: false
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductReferenceList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/{productCode}/reviews:
    get:
      tags:
      - Products
      summary: Get reviews for a product
      description: Returns the reviews for a product with a given product code.
      operationId: getProductReviews
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: maxCount
        in: query
        description: Maximum count of reviews
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ReviewList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Products
      summary: Creates a new customer review as an anonymous user.
      description: Creates a new customer review as an anonymous user.
      operationId: createProductReview
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      - in: body
        name: review
        description: 'Object contains review details like : rating, alias, headline,
          comment'
        required: true
        schema:
          $ref: '#/definitions/Review'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Review'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/{productCode}/stock:
    get:
      tags:
      - Products
      summary: Get a product's stock level.
      description: 'Returns a product''s stock levels sorted by distance from the
        specified location, which is provided using the free-text "location" parameter,
        or by using the longitude and latitude parameters. The following two sets
        of parameters are available: location (required), currentPage (optional),
        pageSize (optional); or longitude (required), latitude (required), currentPage
        (optional), pageSize(optional).'
      operationId: getLocationProductStock
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: currentPage
        in: query
        description: The current result page requested.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: latitude
        in: query
        description: Latitude location parameter.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: location
        in: query
        description: Free-text location
        required: false
        type: string
        allowEmptyValue: false
      - name: longitude
        in: query
        description: Longitude location parameter.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: pageSize
        in: query
        description: The number of results returned per page.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StoreFinderStockSearchPage'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    head:
      tags:
      - Products
      summary: Get header with a total number of product's stock levels.
      description: 'In the response header, the "x-total-count" indicates the total
        number of a product''s stock levels. The following two sets of parameters
        are available: location (required); or longitude (required), and latitude
        (required).'
      operationId: countProductStockByLocation
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: latitude
        in: query
        description: Latitude location parameter.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: location
        in: query
        description: Free-text location
        required: false
        type: string
        allowEmptyValue: false
      - name: longitude
        in: query
        description: Longitude location parameter.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/products/{productCode}/stock/{storeName}:
    get:
      tags:
      - Products
      summary: Get a product's stock level for a store
      description: Returns a product's stock level for a particular store (in other
        words, for a particular point of sale).
      operationId: getStoreProductStock
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: productCode
        in: path
        description: Product identifier
        required: true
        type: string
      - name: storeName
        in: path
        description: Store identifier
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Stock'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/promotions:
    get:
      tags:
      - Promotions
      summary: Get a list of promotions.
      description: Returns promotions defined for a current base site. Requests pertaining
        to promotions have been developed for the previous version of promotions and
        vouchers and therefore some of them are currently not compatible with the
        new promotion engine.
      operationId: getPromotions
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: BASIC
      - name: promotionGroup
        in: query
        description: Only promotions from this group are returned
        required: false
        type: string
        allowEmptyValue: false
      - name: type
        in: query
        description: 'Defines what type of promotions should be returned. Values supported
          for that parameter are: <ul><li>all: All available promotions are returned</li><li>product:
          Only product promotions are returned</li><li>order: Only order promotions
          are returned</li></ul>'
        required: true
        type: string
        allowEmptyValue: false
        enum:
        - all
        - product
        - order
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PromotionList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/promotions/{code}:
    get:
      tags:
      - Promotions
      summary: Get a promotion based on code
      description: Returns details of a single promotion specified by a promotion
        code. Requests pertaining to promotions have been developed for the previous
        version of promotions and vouchers and therefore some of them are currently
        not compatible with the new promotion engine.
      operationId: getPromotion
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: code
        in: path
        description: Promotion identifier (code)
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: BASIC
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Promotion'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/resetpassword:
    post:
      tags:
      - Forgotten Passwords
      summary: Reset password after customer's clicked forgotten password link.
      description: Reset password after customer's clicked forgotten password link.
      operationId: doResetPassword
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: resetPassword
        description: Request body parameter that contains details such as token and
          new password
        required: true
        schema:
          $ref: '#/definitions/ResetPassword'
      responses:
        201:
          description: Created
        202:
          description: Accepted
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/stores:
    get:
      tags:
      - Stores
      summary: Get a list of store locations
      description: Lists all store locations that are near the location specified
        in a query or based on latitude and longitude.
      operationId: getStoreLocations
      parameters:
      - name: accuracy
        in: query
        description: Accuracy in meters.
        required: false
        type: number
        default: 0.0
        format: double
        allowEmptyValue: false
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: currentPage
        in: query
        description: The current result page requested.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: latitude
        in: query
        description: Coordinate that specifies the north-south position of a point
          on the Earth's surface.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: longitude
        in: query
        description: Coordinate that specifies the east-west position of a point on
          the Earth's surface.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: pageSize
        in: query
        description: The number of results returned per page.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      - name: query
        in: query
        description: Location in natural language i.e. city or country.
        required: false
        type: string
        allowEmptyValue: false
      - name: radius
        in: query
        description: 'Radius in meters. Max value: 40075000.0 (Earth''s perimeter).'
        required: false
        type: number
        default: 100000.0
        format: double
        allowEmptyValue: false
      - name: sort
        in: query
        description: Sorting method applied to the return results.
        required: false
        type: string
        default: asc
        allowEmptyValue: false
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StoreFinderSearchPage'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    head:
      tags:
      - Stores
      summary: Get a header with the number of store locations.
      description: In the response header, the "x-total-count" indicates the number
        of all store locations that are near the location specified in a query, or
        based on latitude and longitude.
      operationId: countStoreLocations
      consumes:
      - application/json
      parameters:
      - name: accuracy
        in: query
        description: Accuracy in meters.
        required: false
        type: number
        default: 0.0
        format: double
        allowEmptyValue: false
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: latitude
        in: query
        description: Coordinate that specifies the north-south position of a point
          on the Earth's surface.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: longitude
        in: query
        description: Coordinate that specifies the east-west position of a point on
          the Earth's surface.
        required: false
        type: number
        format: double
        allowEmptyValue: false
      - name: query
        in: query
        description: Location in natural language i.e. city or country.
        required: false
        type: string
        allowEmptyValue: false
      - name: radius
        in: query
        description: 'Radius in meters. Max value: 40075000.0 (Earth''s perimeter).'
        required: false
        type: number
        default: 100000.0
        format: double
        allowEmptyValue: false
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/stores/country/{countryIso}:
    get:
      tags:
      - Stores
      summary: Get a list of store locations for a given country
      description: Lists all store locations that are in the specified country.
      operationId: getStoresByCountry
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: countryIso
        in: path
        description: Country ISO code
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PointOfServiceList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/stores/country/{countryIso}/region/{regionIso}:
    get:
      tags:
      - Stores
      summary: Get a list of store locations for a given country and region
      description: Lists all store locations that are in the specified country and
        region.
      operationId: getStoresByCountryAndRegion
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: countryIso
        in: path
        description: Country ISO code
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: regionIso
        in: path
        description: Region ISO code
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PointOfServiceList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/stores/storescounts:
    get:
      tags:
      - Stores
      summary: Gets a store location count per country and regions
      description: Returns store counts in countries and regions
      operationId: getLocationCounts
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StoreCountList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/stores/{storeId}:
    get:
      tags:
      - Stores
      summary: Get a store location
      description: Returns store location based on its unique name.
      operationId: getStoreLocation
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: storeId
        in: path
        description: Store identifier (currently store name)
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PointOfService'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/titles:
    get:
      tags:
      - Miscs
      summary: Get a list of all localized titles.
      description: Lists all localized titles.
      operationId: getTitles
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users:
    post:
      tags:
      - Users
      summary: ' Registers a customer'
      description: 'Registers a customer. Requires the following parameters: login,
        password, firstName, lastName, titleCode.'
      operationId: createUser
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - in: body
        name: user
        description: User's object.
        required: true
        schema:
          $ref: '#/definitions/UserSignUp'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}:
    get:
      tags:
      - Users
      summary: Get customer profile
      description: Returns customer profile.
      operationId: getUser
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Users
      summary: Updates customer profile
      description: Updates customer profile. Attributes not provided in the request
        body will be defined again (set to null or default).
      operationId: replaceUser
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: user
        description: User's object
        required: true
        schema:
          $ref: '#/definitions/User'
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Users
      summary: Delete customer profile.
      description: Removes customer profile.
      operationId: removeUser
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    patch:
      tags:
      - Users
      summary: Updates customer profile
      description: Updates customer profile. Only attributes provided in the request
        body will be changed.
      operationId: updateUser
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: user
        description: User's object.
        required: true
        schema:
          $ref: '#/definitions/User'
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/addresses:
    get:
      tags:
      - Address
      summary: Get customer's addresses
      description: Returns customer's addresses.
      operationId: getAddresses
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddressList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Address
      summary: Creates a new address.
      description: Creates a new address.
      operationId: createAddress
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: address
        description: Address object.
        required: true
        schema:
          $ref: '#/definitions/Address'
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Address'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/addresses/verification:
    post:
      tags:
      - Address
      summary: Verifies address.
      description: Verifies address.
      operationId: validateAddress
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: address
        description: Address object.
        required: true
        schema:
          $ref: '#/definitions/Address'
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddressValidation'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/addresses/{addressId}:
    get:
      tags:
      - Address
      summary: Get info about address
      description: Returns detailed information about address with a given id.
      operationId: getAddress
      parameters:
      - name: addressId
        in: path
        description: Address identifier.
        required: true
        type: string
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Address'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Address
      summary: Updates the address
      description: Updates the address. Attributes not provided in the request will
        be defined again (set to null or default).
      operationId: replaceAddress
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: address
        description: Address object.
        required: true
        schema:
          $ref: '#/definitions/Address'
      - name: addressId
        in: path
        description: Address identifier.
        required: true
        type: string
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Address
      summary: Delete customer's address.
      description: Removes customer's address.
      operationId: removeAddress
      parameters:
      - name: addressId
        in: path
        description: Address identifier.
        required: true
        type: string
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    patch:
      tags:
      - Address
      summary: Updates the address
      description: Updates the address. Only attributes provided in the request body
        will be changed.
      operationId: updateAddress
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: address
        description: Address object
        required: true
        schema:
          $ref: '#/definitions/Address'
      - name: addressId
        in: path
        description: Address identifier.
        required: true
        type: string
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts:
    get:
      tags:
      - Carts
      summary: Get all customer carts.
      description: Lists all customer carts.
      operationId: getCarts
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: currentPage
        in: query
        description: Optional pagination parameter in case of savedCartsOnly == true.
          Default value 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: pageSize
        in: query
        description: Optional {@link PaginationData} parameter in case of savedCartsOnly
          == true. Default value 20.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      - name: savedCartsOnly
        in: query
        description: Optional parameter. If the parameter is provided and its value
          is true, only saved carts are returned.
        required: false
        type: boolean
        default: false
        allowEmptyValue: false
      - name: sort
        in: query
        description: Optional sort criterion in case of savedCartsOnly == true. No
          default value.
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CartList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Carts
      summary: Creates or restore a cart for a user.
      description: Creates a new cart or restores an anonymous cart as a user's cart
        (if an old Cart Id is given in the request).
      operationId: createCart
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: oldCartId
        in: query
        description: Anonymous cart GUID.
        required: false
        type: string
        allowEmptyValue: false
      - name: toMergeCartGuid
        in: query
        description: The GUID of the user's cart that will be merged with the anonymous
          cart.
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Cart'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}:
    get:
      tags:
      - Carts
      summary: Get a cart with a given identifier.
      description: Returns the cart with a given identifier.
      operationId: getCart
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Cart'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Carts
      summary: Deletes a cart with a given cart id.
      description: Deletes a cart with a given cart id.
      operationId: removeCart
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/addresses/delivery:
    post:
      tags:
      - Carts
      summary: Creates a delivery address for the cart.
      description: Creates an address and assigns it to the cart as the delivery address.
      operationId: createCartDeliveryAddress
      consumes:
      - application/xml
      - application/json
      parameters:
      - in: body
        name: address
        description: |-
          Request body parameter that contains details such as the customer's first name (firstName), the customer's last name (lastName), the customer's title (titleCode), the customer's phone (phone), the country (country.isocode), the first part of the address (line1), the second part of the address (line2), the town (town), the postal code (postalCode), and the region (region.isocode).

          The DTO is in XML or .json format.
        required: true
        schema:
          $ref: '#/definitions/Address'
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Address'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Carts
      summary: Sets a delivery address for the cart.
      description: Sets a delivery address for the cart. The address country must
        be placed among the delivery countries of the current base store.
      operationId: replaceCartDeliveryAddress
      consumes:
      - application/json
      parameters:
      - name: addressId
        in: query
        description: Address identifier
        required: true
        type: string
        allowEmptyValue: false
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Carts
      summary: Deletes the delivery address from the cart.
      description: Deletes the delivery address from the cart.
      operationId: removeCartDeliveryAddress
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/clonesavedcart:
    post:
      tags:
      - Save Cart
      summary: Explicitly clones a cart.
      description: Explicitly clones a cart.
      operationId: doCartClone
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: description
        in: query
        description: The description that should be applied to the cloned cart.
        required: false
        type: string
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: name
        in: query
        description: The name that should be applied to the cloned cart.
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SaveCartResult'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/consolidate:
    get:
      tags:
      - Extended Carts
      summary: Get consolidated pickup options.
      description: |-
        Returns a list of stores that have all the pick-up items in stock.

        Note, if there are no stores that have all the pick up items in stock, or all items are already set to the same pick up location, the response returns an empty list.
      operationId: getConsolidatedPickupLocations
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PointOfServiceList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Extended Carts
      summary: Handles the consolidating pickup locations.
      description: |-
        Specifies one store location where all items will be picked up.

        Note, if any of the items are not available at the specified location, these items are removed from the cart.
      operationId: createConsolidatedPickupLocation
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: storeName
        in: query
        description: The name of the store where items will be picked up
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CartModificationList'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/deliverymode:
    get:
      tags:
      - Carts
      summary: Get the delivery mode selected for the cart.
      description: Returns the delivery mode selected for the cart.
      operationId: getCartDeliveryMode
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DeliveryMode'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Carts
      summary: Sets the delivery mode for a cart.
      description: Sets the delivery mode with a given identifier for the cart.
      operationId: replaceCartDeliveryMode
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: deliveryModeId
        in: query
        description: Delivery mode identifier (code)
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Carts
      summary: Deletes the delivery mode from the cart.
      description: Deletes the delivery mode from the cart.
      operationId: removeCartDeliveryMode
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/deliverymodes:
    get:
      tags:
      - Carts
      summary: Get all delivery modes for the current store and delivery address.
      description: Returns all delivery modes supported for the current base store
        and cart delivery address. A delivery address must be set for the cart, otherwise
        an empty list will be returned.
      operationId: getCartDeliveryModes
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DeliveryModeList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/email:
    put:
      tags:
      - Carts
      summary: Assigns an email to the cart.
      description: Assigns an email to the cart. This step is required to make a guest
        checkout.
      operationId: replaceCartGuestUser
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: email
        in: query
        description: Email of the guest user. It will be used during the checkout
          process.
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/entries:
    get:
      tags:
      - Carts
      summary: Get cart entries.
      description: Returns cart entries.
      operationId: getCartEntries
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrderEntryList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Carts
      summary: Adds a product to the cart.
      description: Adds a product to the cart.
      operationId: createCartEntry
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - in: body
        name: entry
        description: |-
          Request body parameter that contains details such as the product code (product.code), the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name).

          The DTO is in XML or .json format.
        required: true
        schema:
          $ref: '#/definitions/OrderEntry'
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CartModification'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}:
    get:
      tags:
      - Carts
      summary: Get the details of the cart entries.
      description: Returns the details of the cart entries.
      operationId: getCartEntry
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: entryNumber
        in: path
        description: The entry number. Each entry in a cart has an entry number. Cart
          entries are numbered in ascending order, starting with zero (0).
        required: true
        type: integer
        format: int64
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrderEntry'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Carts
      summary: Set quantity and store details of a cart entry.
      description: Updates the quantity of a single cart entry and the details of
        the store where the cart entry will be picked up. Attributes not provided
        in request will be defined again (set to null or default)
      operationId: replaceCartEntry
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - in: body
        name: entry
        description: |-
          Request body parameter that contains details such as the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name)

          The DTO is in XML or .json format.
        required: true
        schema:
          $ref: '#/definitions/OrderEntry'
      - name: entryNumber
        in: path
        description: The entry number. Each entry in a cart has an entry number. Cart
          entries are numbered in ascending order, starting with zero (0).
        required: true
        type: integer
        format: int64
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CartModification'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Carts
      summary: Deletes cart entry.
      description: Deletes cart entry.
      operationId: removeCartEntry
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: entryNumber
        in: path
        description: The entry number. Each entry in a cart has an entry number. Cart
          entries are numbered in ascending order, starting with zero (0).
        required: true
        type: integer
        format: int64
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    patch:
      tags:
      - Carts
      summary: Update quantity and store details of a cart entry.
      description: Updates the quantity of a single cart entry and the details of
        the store where the cart entry will be picked up.
      operationId: updateCartEntry
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - in: body
        name: entry
        description: |-
          Request body parameter that contains details such as the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name)

          The DTO is in XML or .json format.
        required: true
        schema:
          $ref: '#/definitions/OrderEntry'
      - name: entryNumber
        in: path
        description: The entry number. Each entry in a cart has an entry number. Cart
          entries are numbered in ascending order, starting with zero (0).
        required: true
        type: integer
        format: int64
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CartModification'
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/flagForDeletion:
    patch:
      tags:
      - Save Cart
      summary: Flag a cart for deletion.
      description: Flags a cart for deletion (the cart doesn't have corresponding
        save cart attributes anymore). The cart is not actually deleted from the database.
        But with the removal of the saved cart attributes, this cart will be taken
        care of by the cart removal job just like any other cart.
      operationId: doUpdateFlagForDeletion
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SaveCartResult'
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/request:
    get:
      tags:
      - Extended Carts
      summary: Get information needed for create subscription
      description: Returns the necessary information for creating a subscription that
        contacts the payment provider directly. This information contains the payment
        provider URL and a list of parameters that are needed to create the subscription.
      operationId: getSopPaymentRequestDetails
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: extendedMerchantCallback
        in: query
        description: Define which url should be returned
        required: false
        type: boolean
        default: false
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: responseUrl
        in: query
        description: 'The URL that the payment provider uses to return payment information.
          Possible values for responseUrl include the following: “orderPage_cancelResponseURL”,
          “orderPage_declineResponseURL”, and “orderPage_receiptResponseURL”.'
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentRequest'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response:
    get:
      tags:
      - Extended Carts
      summary: Get information about create subscription request results
      description: |-
        Returns information related to creating subscription request results. If there is no response from the payment provider, a "202 Accepted" status is returned. If the subscription is created successfully, the payment details are returned. Otherwise, an error response is returned.

        Note, the “Try it out” button is not enabled for this method (always returns an error) because the Extended Carts Controller handles parameters differently, depending on which payment provider is used. For more information about this controller, please refer to the “acceleratorwebservicesaddon AddOn” documentation on help.hybris.com.
      operationId: getSopPaymentResponse
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Extended Carts
      summary: Handles response from payment provider and create payment details
      description: |-
        Handles the response from the payment provider and creates payment details.

        Note, the “Try it out” button is not enabled for this method (always returns an error) because the Extended Carts Controller handles parameters differently, depending on which payment provider is used. For more information about this controller, please refer to the “acceleratorwebservicesaddon AddOn” documentation on help.hybris.com.
      operationId: doHandleSopPaymentResponse
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentDetails'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Extended Carts
      summary: Deletes payment provider response related to cart.
      description: Deletes the payment provider response related to the specified
        cart.
      operationId: removeSopPaymentResponse
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/paymentdetails:
    post:
      tags:
      - Carts
      summary: Defines and assigns details of a new credit card payment to the cart.
      description: Defines the details of a new credit card, and assigns this payment
        option to the cart.
      operationId: createCartPaymentDetails
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - in: body
        name: paymentDetails
        description: |-
          Request body parameter that contains details such as the name on the card (accountHolderName), the card number (cardNumber), the card type (cardType.code), the month of the expiry date (expiryMonth), the year of the expiry date (expiryYear), whether the payment details should be saved (saved), whether the payment details should be set as default (defaultPaymentInfo), and the billing address (billingAddress.firstName, billingAddress.lastName, billingAddress.titleCode, billingAddress.country.isocode, billingAddress.line1, billingAddress.line2, billingAddress.town, billingAddress.postalCode, billingAddress.region.isocode)

          The DTO is in XML or .json format.
        required: true
        schema:
          $ref: '#/definitions/PaymentDetails'
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/PaymentDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Carts
      summary: Sets credit card payment details for the cart.
      description: Sets credit card payment details for the cart.
      operationId: replaceCartPaymentDetails
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: paymentDetailsId
        in: query
        description: Payment details identifier.
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/promotions:
    get:
      tags:
      - Carts
      summary: Get information about promotions applied on cart.
      description: Returns information about the promotions applied on the cart. Requests
        pertaining to promotions have been developed for the previous version of promotions
        and vouchers, and as a result, some of them are currently not compatible with
        the new promotions engine.
      operationId: getCartPromotions
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PromotionResultList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Carts
      summary: Enables promotions based on the promotionsId of the cart.
      description: Enables a promotion for the order based on the promotionId defined
        for the cart. Requests pertaining to promotions have been developed for the
        previous version of promotions and vouchers, and as a result, some of them
        are currently not compatible with the new promotions engine.
      operationId: doApplyCartPromotion
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: promotionId
        in: query
        description: Promotion identifier (code)
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/promotions/{promotionId}:
    get:
      tags:
      - Carts
      summary: Get information about promotion applied on cart.
      description: Returns information about a promotion (with a specific promotionId),
        that has been applied on the cart. Requests pertaining to promotions have
        been developed for the previous version of promotions and vouchers, and as
        a result, some of them are currently not compatible with the new promotions
        engine.
      operationId: getCartPromotion
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: promotionId
        in: path
        description: Promotion identifier (code)
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PromotionResultList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Carts
      summary: Disables the promotion based on the promotionsId of the cart.
      description: Disables the promotion for the order based on the promotionId defined
        for the cart. Requests pertaining to promotions have been developed for the
        previous version of promotions and vouchers, and as a result, some of them
        are currently not compatible with the new promotions engine.
      operationId: removeCartPromotion
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: promotionId
        in: path
        description: Promotion identifier (code)
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/restoresavedcart:
    patch:
      tags:
      - Save Cart
      summary: Restore a saved cart.
      description: Restore a saved cart.
      operationId: doUpdateSavedCart
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SaveCartResult'
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/save:
    patch:
      tags:
      - Save Cart
      summary: Explicitly saves a cart.
      description: Explicitly saves a cart.
      operationId: doSaveCart
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: saveCartDescription
        in: query
        description: The description that should be applied to the saved cart.
        required: false
        type: string
        allowEmptyValue: false
      - name: saveCartName
        in: query
        description: The name that should be applied to the saved cart.
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SaveCartResult'
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/savedcart:
    get:
      tags:
      - Save Cart
      summary: Get a saved cart.
      description: Returns a saved cart for an authenticated user. The cart is identified
        using the "cartId" parameter.
      operationId: getSavedCart
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SaveCartResult'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/vouchers:
    get:
      tags:
      - Carts
      summary: Get a list of vouchers applied to the cart.
      description: Returns a list of vouchers applied to the cart.
      operationId: getCartVouchers
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: fields
        in: query
        description: Response configuration. This is the list of fields that should
          be returned in the response body.
        required: false
        type: string
        default: DEFAULT
        allowEmptyValue: false
        enum:
        - BASIC
        - DEFAULT
        - FULL
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VoucherList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Carts
      summary: Applies a voucher based on the voucherId defined for the cart.
      description: Applies a voucher based on the voucherId defined for the cart.
      operationId: doApplyCartVoucher
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      - name: voucherId
        in: query
        description: Voucher identifier (code)
        required: true
        type: string
        allowEmptyValue: false
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/carts/{cartId}/vouchers/{voucherId}:
    delete:
      tags:
      - Carts
      summary: Deletes a voucher defined for the current cart.
      description: Deletes a voucher based on the voucherId defined for the current
        cart.
      operationId: removeCartVoucher
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: path
        description: 'Cart identifier: cart code for logged in user, cart guid for
          anonymous user, ''current'' for the last modified cart'
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      - name: voucherId
        in: path
        description: Voucher identifier (code)
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/consents:
    post:
      tags:
      - Consents
      summary: A user can give consent.
      operationId: doGiveConsent
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: consentTemplateId
        in: query
        description: Consent template ID.
        required: true
        type: string
        allowEmptyValue: false
      - name: consentTemplateVersion
        in: query
        description: Consent template version.
        required: true
        type: integer
        format: int32
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConsentTemplate'
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/consents/{consentCode}:
    delete:
      tags:
      - Consents
      summary: Withdraw the user consent for a given consent code.
      description: If the user consent was given, the consent is withdrawn. If consent
        was already withdrawn then returns consent already withdrawn error. If there
        is no such consent then returns not found. If the current user is an anonymous
        user then returns access denied error.
      operationId: removeConsent
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: consentCode
        in: path
        description: Consent code.
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/consenttemplates:
    get:
      tags:
      - Consents
      summary: Fetch the list of consents
      description: If user has not given or withdrawn consent to any of the template,
        no given or withdraw date is returned.
      operationId: getConsentTemplates
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConsentTemplateList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}:
    get:
      tags:
      - Consents
      summary: Fetch the consent.
      description: If user has not given or withdrawn consent to the template, no
        given or withdraw date is returned.
      operationId: getConsentTemplate
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: consentTemplateId
        in: path
        description: Consent template id.
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConsentTemplate'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/customergroups:
    get:
      tags:
      - Users
      summary: Get all customer groups of a customer.
      description: Returns all customer groups of a customer.
      operationId: getUserCustomerGroups
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserGroupList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/login:
    put:
      tags:
      - Users
      summary: Changes customer's login name.
      description: Changes a customer's login name. Requires the customer's current
        password.
      operationId: replaceUserLogin
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: newLogin
        in: query
        description: Customer's new login name. Customer login is case insensitive.
        required: true
        type: string
        allowEmptyValue: false
      - name: password
        in: query
        description: Customer's current password.
        required: true
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/orders:
    get:
      tags:
      - Orders
      summary: Get order history for user.
      description: Returns order history data for all orders placed by a specified
        user for a specified base store. The response can display the results across
        multiple pages, if required.
      operationId: getUserOrderHistory
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: currentPage
        in: query
        description: The current result page requested.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: pageSize
        in: query
        description: The number of results returned per page.
        required: false
        type: integer
        default: 20
        format: int32
        allowEmptyValue: false
      - name: sort
        in: query
        description: Sorting method applied to the return results.
        required: false
        type: string
        allowEmptyValue: false
      - name: statuses
        in: query
        description: Filters only certain order statuses. For example, statuses=CANCELLED,CHECKED_VALID
          would only return orders with status CANCELLED or CHECKED_VALID.
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrderHistoryList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    head:
      tags:
      - Orders
      summary: Get total number of orders.
      description: In the response header, the "x-total-count" indicates the total
        number of orders placed by a specified user for a specified base store.
      operationId: countUserOrders
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: statuses
        in: query
        description: Filters only certain order statuses. For example, statuses=CANCELLED,CHECKED_VALID
          would only return orders with status CANCELLED or CHECKED_VALID.
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    post:
      tags:
      - Orders
      summary: Place a order.
      description: Authorizes the cart and places the order. The response contains
        the new order data.
      operationId: placeOrder
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: cartId
        in: query
        description: Cart code for logged in user, cart GUID for guest checkout
        required: true
        type: string
        allowEmptyValue: false
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Order'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/orders/{code}:
    get:
      tags:
      - Orders
      summary: Get a order.
      description: Returns specific order details based on a specific order code.
        The response contains detailed order information.
      operationId: getUserOrders
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: code
        in: path
        description: Order GUID (Globally Unique Identifier) or order CODE
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Order'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/orders/{code}/cancellation:
    post:
      tags:
      - Orders
      summary: Cancel an order.
      description: Cancels an order partially or completely
      operationId: doCancelOrder
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: cancellationRequestEntryInputList
        description: Cancellation request input list for the current order.
        required: true
        schema:
          $ref: '#/definitions/CancellationRequestEntryInputList'
      - name: code
        in: path
        description: Order code
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/password:
    put:
      tags:
      - Users
      summary: Changes customer's password
      description: Changes customer's password.
      operationId: replaceUserPassword
      consumes:
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: new
        in: query
        description: New password.
        required: true
        type: string
        allowEmptyValue: false
      - name: old
        in: query
        description: Old password. Required only for ROLE_CUSTOMERGROUP
        required: false
        type: string
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        201:
          description: Created
        202:
          description: Accepted
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/paymentdetails:
    get:
      tags:
      - Payment Details
      summary: Get customer's credit card payment details list.
      description: Return customer's credit card payment details list.
      operationId: getPaymentDetailsList
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: saved
        in: query
        description: Type of payment details.
        required: false
        type: boolean
        default: false
        allowEmptyValue: false
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentDetailsList'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}:
    get:
      tags:
      - Payment Details
      summary: Get customer's credit card payment details.
      description: Returns a customer's credit card payment details for the specified
        paymentDetailsId.
      operationId: getPaymentDetails
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: DEFAULT
      - name: paymentDetailsId
        in: path
        description: Payment details identifier.
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PaymentDetails'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    put:
      tags:
      - Payment Details
      summary: Updates existing customer's credit card payment info.
      description: Updates existing customer's credit card payment info based on the
        payment info ID. Attributes not given in request will be defined again (set
        to null or default).
      operationId: replacePaymentDetails
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: paymentDetails
        description: Payment details object.
        required: true
        schema:
          $ref: '#/definitions/PaymentDetails'
      - name: paymentDetailsId
        in: path
        description: Payment details identifier.
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        201:
          description: Created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    delete:
      tags:
      - Payment Details
      summary: Deletes customer's credit card payment details.
      description: Deletes a customer's credit card payment details based on a specified
        paymentDetailsId.
      operationId: removePaymentDetails
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: paymentDetailsId
        in: path
        description: Payment details identifier.
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
    patch:
      tags:
      - Payment Details
      summary: Updates existing customer's credit card payment details.
      description: Updates an existing customer's credit card payment details based
        on the specified paymentDetailsId. Only those attributes provided in the request
        will be updated.
      operationId: updatePaymentDetails
      consumes:
      - application/xml
      - application/json
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - in: body
        name: paymentDetails
        description: Payment details object
        required: true
        schema:
          $ref: '#/definitions/PaymentDetails'
      - name: paymentDetailsId
        in: path
        description: Payment details identifier.
        required: true
        type: string
      - name: userId
        in: path
        description: 'User identifier or one of the literals : ''current'' for currently
          authenticated user, ''anonymous'' for anonymous user'
        required: true
        type: string
      responses:
        200:
          description: OK
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
  /{baseSiteId}/vouchers/{code}:
    get:
      tags:
      - Vouchers
      summary: Get a voucher based on code.
      description: Returns details of a single voucher that is specified by its voucher
        identification code.
      operationId: getVoucher
      parameters:
      - name: baseSiteId
        in: path
        description: Base site identifier
        required: true
        type: string
      - name: code
        in: path
        description: Voucher identifier (code)
        required: true
        type: string
      - name: fields
        in: query
        description: 'Response configuration. This is the list of fields that should
          be returned in the response body. Examples: BASIC, DEFAULT, FULL'
        required: false
        type: string
        default: BASIC
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Voucher'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
      security:
      - oauth2_Password: []
      - oauth2_client_credentials: []
      deprecated: false
securityDefinitions:
  oauth2_Password:
    type: oauth2
    tokenUrl: https://{oauth2_url}/authorizationserver/oauth/token
    flow: password
  oauth2_client_credentials:
    type: oauth2
    tokenUrl: https://{oauth2_url}/authorizationserver/oauth/token
    flow: application
    scopes:
      extended: ""
definitions:
  Address:
    type: object
    required:
    - firstName
    - lastName
    - line1
    - postalCode
    - titleCode
    - town
    properties:
      cellphone:
        type: string
        description: Cellphone number
      companyName:
        type: string
        description: Company Name
      country:
        $ref: '#/definitions/Country'
      defaultAddress:
        type: boolean
        description: Boolean flag if address is default
      district:
        type: string
        description: District name
      email:
        type: string
        description: Email address
      firstName:
        type: string
        description: First name of the address person
      formattedAddress:
        type: string
        description: Boolean flag if address is formatted
      id:
        type: string
        description: Unique id value of the address which is optional while creating
          new address. While performing other address operations this value is the
          key
      lastName:
        type: string
        description: Last name of the address person
      line1:
        type: string
        description: First line of the address
      line2:
        type: string
        description: Second line of the address
      phone:
        type: string
        description: Phone number
      postalCode:
        type: string
        description: Postal code of the address
      region:
        $ref: '#/definitions/Region'
      shippingAddress:
        type: boolean
        description: Boolean flag if address is for shipping
      title:
        type: string
        description: Title of the address person
      titleCode:
        type: string
        description: Code of the title
      town:
        type: string
        description: Town, field required
      visibleInAddressBook:
        type: boolean
        description: Boolean flag if address is visible in the Address Book
    title: Address
    description: Request body fields required and optional to operate on address data.
      The DTO is in XML or .json format
  AddressList:
    type: object
    properties:
      addresses:
        type: array
        description: List of addresses
        items:
          $ref: '#/definitions/Address'
    title: AddressList
    description: Representation of an Address list
  AddressValidation:
    type: object
    properties:
      decision:
        type: string
        description: Decision
      errors:
        $ref: '#/definitions/errorList'
      suggestedAddresses:
        type: array
        description: List of suggested addresses
        items:
          $ref: '#/definitions/Address'
    title: AddressValidation
    description: Representation of an Address Validation
  BaseOption:
    type: object
    properties:
      options:
        type: array
        description: List of all variant options
        items:
          $ref: '#/definitions/VariantOption'
      selected:
        $ref: '#/definitions/VariantOption'
      variantType:
        type: string
        description: Variant type of base option
    title: BaseOption
    description: Representation of a Base Ooption
  BaseSite:
    type: object
    properties:
      channel:
        type: string
        description: Channel
      defaultLanguage:
        $ref: '#/definitions/Language'
      defaultPreviewCatalogId:
        type: string
        description: Default preview catalog id
      defaultPreviewCategoryCode:
        type: string
        description: Default preview category code
      defaultPreviewProductCode:
        type: string
        description: Default preview product code
      locale:
        type: string
        description: Locale data for Basesite
      name:
        type: string
        description: Name of Basesite
      stores:
        type: array
        description: List of Basestores
        items:
          $ref: '#/definitions/BaseStore'
      theme:
        type: string
        description: Theme of Basesite
      uid:
        type: string
        description: Unique identifier of Basesite
      urlEncodingAttributes:
        type: array
        description: List of url encoding attributes
        items:
          type: string
      urlPatterns:
        type: array
        description: List of url patterns
        items:
          type: string
    title: BaseSite
    description: Representation of a Base Site
  BaseSiteList:
    type: object
    properties:
      baseSites:
        type: array
        description: List of basesites
        items:
          $ref: '#/definitions/BaseSite'
    title: BaseSiteList
    description: Representation of a Base Site List
  BaseStore:
    type: object
    properties:
      createReturnProcessCode:
        type: string
        description: Create return process code
      currencies:
        type: array
        description: List of currencies
        items:
          $ref: '#/definitions/Currency'
      defaultCurrency:
        $ref: '#/definitions/Currency'
      defaultDeliveryOrigin:
        $ref: '#/definitions/PointOfService'
      defaultLanguage:
        $ref: '#/definitions/Language'
      deliveryCountries:
        type: array
        description: List of delivery countries
        items:
          $ref: '#/definitions/Country'
      deliveryModes:
        $ref: '#/definitions/DeliveryModeList'
      externalTaxEnabled:
        type: boolean
        description: Flag defining is external tax is enabled
      languages:
        type: array
        description: List of languages
        items:
          $ref: '#/definitions/Language'
      maxRadiusForPosSearch:
        type: number
        format: double
        description: Maximum radius for searching point of service
      name:
        type: string
        description: Base store name
      paymentProvider:
        type: string
        description: Payment provider
      pointsOfService:
        type: array
        description: List of points of service
        items:
          $ref: '#/definitions/PointOfService'
      submitOrderProcessCode:
        type: string
        description: Submit order process code
    title: BaseStore
    description: Representation of a Base Store
  Breadcrumb:
    type: object
    properties:
      facetCode:
        type: string
        description: Code of the facet
      facetName:
        type: string
        description: Name of the facet
      facetValueCode:
        type: string
        description: Value code of the facet
      facetValueName:
        type: string
        description: Value name of the facet
      removeQuery:
        $ref: '#/definitions/SearchState'
      truncateQuery:
        $ref: '#/definitions/SearchState'
    title: Breadcrumb
    description: Representation of a Breadcrumb
  CancellationRequestEntryInput:
    type: object
    required:
    - orderEntryNumber
    - quantity
    properties:
      orderEntryNumber:
        type: integer
        format: int32
        example: 1
        description: Order entry number of the cancelled product
      quantity:
        type: integer
        format: int64
        example: 5
        description: Quantity of the product which belongs to the order entry and
          is requested to be cancelled
    title: CancellationRequestEntryInput
    description: Representation of a cancellation request entry input for an order
  CancellationRequestEntryInputList:
    type: object
    required:
    - cancellationRequestEntryInputs
    properties:
      cancellationRequestEntryInputs:
        type: array
        description: Cancellation request entry inputs which contain information about
          the order entries which are requested to be cancelled
        items:
          $ref: '#/definitions/CancellationRequestEntryInput'
    title: CancellationRequestEntryInputList
    description: Representation of a cancellation request entry input list for an
      order
  CardType:
    type: object
    properties:
      code:
        type: string
        description: Card type code
      name:
        type: string
        description: Card type name
    title: CardType
    description: Representation of a Card Type
  CardTypeList:
    type: object
    properties:
      cardTypes:
        type: array
        description: List of card types
        items:
          $ref: '#/definitions/CardType'
    title: CardTypeList
    description: Representation of a Card Type List
  Cart:
    type: object
    properties:
      appliedOrderPromotions:
        type: array
        description: List of applied order promotions
        items:
          $ref: '#/definitions/PromotionResult'
      appliedProductPromotions:
        type: array
        description: List of applied product promotions
        items:
          $ref: '#/definitions/PromotionResult'
      appliedVouchers:
        type: array
        description: List of applied vouchers
        items:
          $ref: '#/definitions/Voucher'
      calculated:
        type: boolean
        description: Flag showing if order is calculated
      code:
        type: string
        description: Code number of order
      deliveryAddress:
        $ref: '#/definitions/Address'
      deliveryCost:
        $ref: '#/definitions/Price'
      deliveryItemsQuantity:
        type: integer
        format: int64
        description: Quantity of delivery items
      deliveryMode:
        $ref: '#/definitions/DeliveryMode'
      deliveryOrderGroups:
        type: array
        description: List of delivery order entries group
        items:
          $ref: '#/definitions/DeliveryOrderEntryGroup'
      description:
        type: string
        description: Description of the cart
      entries:
        type: array
        description: List of order entries
        items:
          $ref: '#/definitions/OrderEntry'
      expirationTime:
        type: string
        format: date-time
        description: Date of cart expiration time
      guid:
        type: string
        description: Guest user id identifier
      name:
        type: string
        description: Name of the cart
      net:
        type: boolean
        description: Flag stating iv value is net-value
      orderDiscounts:
        $ref: '#/definitions/Price'
      paymentInfo:
        $ref: '#/definitions/PaymentDetails'
      pickupItemsQuantity:
        type: integer
        format: int64
        description: Quantity of pickup items
      pickupOrderGroups:
        type: array
        description: List of pickup order entry group
        items:
          $ref: '#/definitions/PickupOrderEntryGroup'
      potentialOrderPromotions:
        type: array
        description: List of potential order promotions for cart
        items:
          $ref: '#/definitions/PromotionResult'
      potentialProductPromotions:
        type: array
        description: List of potential product promotions for cart
        items:
          $ref: '#/definitions/PromotionResult'
      productDiscounts:
        $ref: '#/definitions/Price'
      saveTime:
        type: string
        format: date-time
        description: Date of saving cart
      savedBy:
        $ref: '#/definitions/Principal'
      site:
        type: string
        description: Site
      store:
        type: string
        description: Store
      subTotal:
        $ref: '#/definitions/Price'
      totalDiscounts:
        $ref: '#/definitions/Price'
      totalItems:
        type: integer
        format: int32
      totalPrice:
        $ref: '#/definitions/Price'
      totalPriceWithTax:
        $ref: '#/definitions/Price'
      totalTax:
        $ref: '#/definitions/Price'
      totalUnitCount:
        type: integer
        format: int32
        description: Total unit count
      user:
        $ref: '#/definitions/Principal'
    title: Cart
    description: Representation of a Cart
  CartList:
    type: object
    properties:
      carts:
        type: array
        description: List of carts
        items:
          $ref: '#/definitions/Cart'
    title: CartList
    description: Representation of a Cart list
  CartModification:
    type: object
    properties:
      deliveryModeChanged:
        type: boolean
        description: Delivery mode changed
      entry:
        $ref: '#/definitions/OrderEntry'
      quantity:
        type: integer
        format: int64
        description: Final quantity after cart modification
      quantityAdded:
        type: integer
        format: int64
        description: Quantity added with cart modification
      statusCode:
        type: string
        description: Status code of cart modification
      statusMessage:
        type: string
        description: Status message
    title: CartModification
    description: Representation of a Cart modification
  CartModificationList:
    type: object
    properties:
      cartModifications:
        type: array
        description: List of cart modifications
        items:
          $ref: '#/definitions/CartModification'
    title: CartModificationList
    description: Representation of a Cart modification list
  Catalog:
    type: object
    properties:
      catalogVersions:
        type: array
        description: List of versions of catalog
        items:
          $ref: '#/definitions/CatalogVersion'
      id:
        type: string
        description: Identifier of abstract catalog item
      lastModified:
        type: string
        format: date-time
        description: Date of last modification
      name:
        type: string
        description: Name of abstract catalog item
      url:
        type: string
        description: Url address of abstract catalog item
    title: Catalog
    description: Representation of an Catalog
  CatalogList:
    type: object
    properties:
      catalogs:
        type: array
        description: List of catalog items
        items:
          $ref: '#/definitions/Catalog'
    title: CatalogList
    description: Representation of a Catalog List
  CatalogVersion:
    type: object
    properties:
      categories:
        type: array
        description: List of category hierarchies
        items:
          $ref: '#/definitions/CategoryHierarchy'
      id:
        type: string
        description: Identifier of abstract catalog item
      lastModified:
        type: string
        format: date-time
        description: Date of last modification
      name:
        type: string
        description: Name of abstract catalog item
      url:
        type: string
        description: Url address of abstract catalog item
    title: CatalogVersion
    description: Representation of a Catalog Version
  Category:
    type: object
    properties:
      code:
        type: string
        description: Code of the category
      image:
        $ref: '#/definitions/Image'
      name:
        type: string
        description: Name of the category
      url:
        type: string
        description: URL of the category
    title: Category
    description: Representation of a Category
  CategoryHierarchy:
    type: object
    properties:
      id:
        type: string
        description: Identifier of abstract catalog item
      lastModified:
        type: string
        format: date-time
        description: Date of last modification
      name:
        type: string
        description: Name of abstract catalog item
      subcategories:
        type: array
        description: List of subcategory hierarchies
        items:
          $ref: '#/definitions/CategoryHierarchy'
      url:
        type: string
        description: Url address of abstract catalog item
    title: CategoryHierarchy
    description: Representation of a Category Hierarchy
  Classification:
    type: object
    properties:
      code:
        type: string
        description: Code of the classification
      features:
        type: array
        description: List of features for given classification
        items:
          $ref: '#/definitions/Feature'
      name:
        type: string
        description: Name of the classification
    title: Classification
    description: Representation of a Classification
  ConfigurationInfo:
    type: object
    properties:
      configurationLabel:
        type: string
        description: Label of configuration info
      configurationValue:
        type: string
        description: Value of configuration info
      configuratorType:
        type: string
        description: Type of configuration info
      status:
        type: string
        description: Status of configuration info
    title: ConfigurationInfo
    description: Representation of a Configuration Info
  Consent:
    type: object
    properties:
      code:
        type: string
        description: Code of consent
      consentGivenDate:
        type: string
        format: date-time
        description: Date of consenting
      consentWithdrawnDate:
        type: string
        format: date-time
        description: Consent withdrawn date
    title: Consent
    description: Representation of a Consent
  ConsentTemplate:
    type: object
    properties:
      currentConsent:
        $ref: '#/definitions/Consent'
      description:
        type: string
        description: Consent template description
      id:
        type: string
        description: Consent template identifier
      name:
        type: string
        description: Consent template name
      version:
        type: integer
        format: int32
        description: Consent template version
    title: ConsentTemplate
    description: Representation of a Consent Template
  ConsentTemplateList:
    type: object
    properties:
      consentTemplates:
        type: array
        description: List of consent templates
        items:
          $ref: '#/definitions/ConsentTemplate'
    title: ConsentTemplateList
    description: Representation of a Consent Template List
  Consignment:
    type: object
    properties:
      code:
        type: string
        description: Consignment code
      deliveryPointOfService:
        $ref: '#/definitions/PointOfService'
      entries:
        type: array
        description: List of consignment entries
        items:
          $ref: '#/definitions/ConsignmentEntry'
      shippingAddress:
        $ref: '#/definitions/Address'
      status:
        type: string
        description: Consignment status
      statusDate:
        type: string
        format: date-time
        description: Consignment status date
      statusDisplay:
        type: string
        description: Consignment status display
      trackingID:
        type: string
        description: Consignment tracking identifier
    title: Consignment
    description: Representation of a Consignment
  ConsignmentEntry:
    type: object
    properties:
      orderEntry:
        $ref: '#/definitions/OrderEntry'
      quantity:
        type: integer
        format: int64
        description: Quantity value of Consignment entry
      shippedQuantity:
        type: integer
        format: int64
        description: Shipped quantity
    title: ConsignmentEntry
    description: Representation of a Consignment Entry
  Country:
    type: object
    properties:
      isocode:
        type: string
        description: Country code in iso format
      name:
        type: string
        description: Name of the country
    title: Country
    description: Response body fields which will be returned while fetching the list
      of countries. The DTO is in XML or .json format
  CountryList:
    type: object
    properties:
      countries:
        type: array
        description: This is the list of Country fields that should be returned in
          the response body
        items:
          $ref: '#/definitions/Country'
    title: CountryList
    description: List of countries
  Currency:
    type: object
    properties:
      active:
        type: boolean
        description: Boolean flag whether currency is active
      isocode:
        type: string
        description: Code of the currency in iso format
      name:
        type: string
        description: Name of the currency
      symbol:
        type: string
        description: Symbol of the currency
    title: Currency
    description: Representation of a Currency
  CurrencyList:
    type: object
    properties:
      currencies:
        type: array
        description: List of currencies
        items:
          $ref: '#/definitions/Currency'
    title: CurrencyList
    description: Representation of a Currency List
  DeliveryMode:
    type: object
    properties:
      code:
        type: string
        description: Code of the delivery mode
      deliveryCost:
        $ref: '#/definitions/Price'
      description:
        type: string
        description: Description of the delivery mode
      name:
        type: string
        description: Name of the delivery mode
    title: DeliveryMode
    description: Representation of a Delivery mode
  DeliveryModeList:
    type: object
    properties:
      deliveryModes:
        type: array
        description: List of delivery modes
        items:
          $ref: '#/definitions/DeliveryMode'
    title: DeliveryModeList
    description: Representation of a Delivery mode list
  DeliveryOrderEntryGroup:
    type: object
    properties:
      deliveryAddress:
        $ref: '#/definitions/Address'
      entries:
        type: array
        description: List of order entries
        items:
          $ref: '#/definitions/OrderEntry'
      quantity:
        type: integer
        format: int64
        description: Quantity of order entries in a group
      totalPriceWithTax:
        $ref: '#/definitions/Price'
    title: DeliveryOrderEntryGroup
    description: Representation of a Delivery Order Entry Group
  Facet:
    type: object
    properties:
      category:
        type: boolean
        description: Flag stating if facet is category facet
      multiSelect:
        type: boolean
        description: Flag stating if facet is multiSelect
      name:
        type: string
        description: Name of the facet
      priority:
        type: integer
        format: int32
        description: Priority value of the facet
      topValues:
        type: array
        description: List of top facet values
        items:
          $ref: '#/definitions/FacetValue'
      values:
        type: array
        description: List of all facet values
        items:
          $ref: '#/definitions/FacetValue'
      visible:
        type: boolean
        description: Flag stating if facet is visible
    title: Facet
    description: Representation of a Facet
  FacetValue:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: Count of the facet value
      name:
        type: string
        description: Name of the facet value
      query:
        $ref: '#/definitions/SearchState'
      selected:
        type: boolean
        description: Flag stating if facet value is selected
    title: FacetValue
    description: Representation of a Facet Value
  Feature:
    type: object
    properties:
      code:
        type: string
        description: Code of the feature
      comparable:
        type: boolean
        description: Flag defining it feature is comparable
      description:
        type: string
        description: Description of the feature
      featureUnit:
        $ref: '#/definitions/FeatureUnit'
      featureValues:
        type: array
        description: List of feature values
        items:
          $ref: '#/definitions/FeatureValue'
      name:
        type: string
        description: Name of the feature
      range:
        type: boolean
        description: Range number of the reature
      type:
        type: string
        description: Type of the feature
    title: Feature
    description: Representation of a Feature
  FeatureUnit:
    type: object
    properties:
      name:
        type: string
        description: Name of the feature unit
      symbol:
        type: string
        description: Symbol of the feature unit
      unitType:
        type: string
        description: Type of the feature unit
    title: FeatureUnit
    description: Representation of a Feature Unit
  FeatureValue:
    type: object
    properties:
      value:
        type: string
        description: Value of the feature
    title: FeatureValue
    description: Representation of a Feature Value
  FutureStock:
    type: object
    properties:
      date:
        type: string
        format: date-time
        description: Date of future stock
      formattedDate:
        type: string
        description: Date of future stock expressed in text value
      stock:
        $ref: '#/definitions/Stock'
    title: FutureStock
    description: Representation of a Future Stock
  GeoPoint:
    type: object
    properties:
      latitude:
        type: number
        format: double
        description: Geopoint latitude
      longitude:
        type: number
        format: double
        description: Geopoint longitude
    title: GeoPoint
    description: Representation of a GeoPoint
  Image:
    type: object
    properties:
      altText:
        type: string
        description: Tooltip content which is visible while image mouse hovering
      format:
        type: string
        description: Format of the image, can be zoom, product, thumbnail, store,
          cartIcon, etc.
      galleryIndex:
        type: integer
        format: int32
        description: Index of the image while displayed in gallery
      imageType:
        type: string
        description: Type of the image, can be PRIMARY or GALLERY
        enum:
        - PRIMARY
        - GALLERY
      url:
        type: string
        description: URL address of the image
    title: Image
    description: Representation of an Image
  Language:
    type: object
    properties:
      active:
        type: boolean
        description: true/false indicator when the language is active
      isocode:
        type: string
        description: iso code of the language
      name:
        type: string
        description: name of the language
      nativeName:
        type: string
        description: name the language in native form
    title: Language
    description: Representation of a Language
  LanguageList:
    type: object
    properties:
      languages:
        type: array
        description: This is the list of Language fields that should be returned in
          the response body
        items:
          $ref: '#/definitions/Language'
    title: LanguageList
    description: Lists all available languages (all languages used for a particular
      store). If the list of languages for a base store is empty, a list of all languages
      available in the system will be returned
  MemberList:
    type: object
    properties:
      members:
        type: array
        description: List of member
        items:
          $ref: '#/definitions/Principal'
    title: MemberList
    description: Representation of a Member List
  OpeningSchedule:
    type: object
    properties:
      code:
        type: string
        description: Code of the opening schedule
      name:
        type: string
        description: Name of the opening schedule
      specialDayOpeningList:
        type: array
        description: List of special opening days
        items:
          $ref: '#/definitions/SpecialOpeningDay'
      weekDayOpeningList:
        type: array
        description: List of weekday opening days
        items:
          $ref: '#/definitions/WeekdayOpeningDay'
    title: OpeningSchedule
    description: Representation of an Opening schedule
  Order:
    type: object
    properties:
      appliedOrderPromotions:
        type: array
        description: List of applied order promotions
        items:
          $ref: '#/definitions/PromotionResult'
      appliedProductPromotions:
        type: array
        description: List of applied product promotions
        items:
          $ref: '#/definitions/PromotionResult'
      appliedVouchers:
        type: array
        description: List of applied vouchers
        items:
          $ref: '#/definitions/Voucher'
      calculated:
        type: boolean
        description: Flag showing if order is calculated
      cancellable:
        type: boolean
        example: true
        description: Boolean flag showing if order is cancellable
      code:
        type: string
        description: Code number of order
      consignments:
        type: array
        description: List of consignment
        items:
          $ref: '#/definitions/Consignment'
      created:
        type: string
        format: date-time
        description: Date of order creation
      deliveryAddress:
        $ref: '#/definitions/Address'
      deliveryCost:
        $ref: '#/definitions/Price'
      deliveryItemsQuantity:
        type: integer
        format: int64
        description: Quantity of delivery items
      deliveryMode:
        $ref: '#/definitions/DeliveryMode'
      deliveryOrderGroups:
        type: array
        description: List of delivery order entries group
        items:
          $ref: '#/definitions/DeliveryOrderEntryGroup'
      deliveryStatus:
        type: string
        description: Order delivery status
      deliveryStatusDisplay:
        type: string
        description: Order delivery status display
      entries:
        type: array
        description: List of order entries
        items:
          $ref: '#/definitions/OrderEntry'
      guestCustomer:
        type: boolean
        description: Flag showing if customer is Guest customer
      guid:
        type: string
        description: Guest user id identifier
      net:
        type: boolean
        description: Flag stating iv value is net-value
      orderDiscounts:
        $ref: '#/definitions/Price'
      paymentInfo:
        $ref: '#/definitions/PaymentDetails'
      pickupItemsQuantity:
        type: integer
        format: int64
        description: Quantity of pickup items
      pickupOrderGroups:
        type: array
        description: List of pickup order entry group
        items:
          $ref: '#/definitions/PickupOrderEntryGroup'
      productDiscounts:
        $ref: '#/definitions/Price'
      site:
        type: string
        description: Site
      status:
        type: string
        description: Status of order
      statusDisplay:
        type: string
        description: Status display
      store:
        type: string
        description: Store
      subTotal:
        $ref: '#/definitions/Price'
      totalDiscounts:
        $ref: '#/definitions/Price'
      totalItems:
        type: integer
        format: int32
      totalPrice:
        $ref: '#/definitions/Price'
      totalPriceWithTax:
        $ref: '#/definitions/Price'
      totalTax:
        $ref: '#/definitions/Price'
      unconsignedEntries:
        type: array
        description: List of unconsigned order entries
        items:
          $ref: '#/definitions/OrderEntry'
      user:
        $ref: '#/definitions/Principal'
    title: Order
    description: Representation of an Order
  OrderEntry:
    type: object
    properties:
      basePrice:
        $ref: '#/definitions/Price'
      cancellableQuantity:
        type: integer
        format: int64
        example: 5
        description: Quantity number of cancellable items in order entry
      cancelledItemsPrice:
        $ref: '#/definitions/Price'
      configurationInfos:
        type: array
        description: Configuration info of order entry
        items:
          $ref: '#/definitions/ConfigurationInfo'
      deliveryMode:
        $ref: '#/definitions/DeliveryMode'
      deliveryPointOfService:
        $ref: '#/definitions/PointOfService'
      entryNumber:
        type: integer
        format: int32
        description: Entry number of the order entry
      product:
        $ref: '#/definitions/Product'
      quantity:
        type: integer
        format: int64
        description: Quantity number of items in order entry
      totalPrice:
        $ref: '#/definitions/Price'
      updateable:
        type: boolean
        description: Flag defining if order entry item is updateable
    title: OrderEntry
    description: Representation of an Order entry
  OrderEntryList:
    type: object
    properties:
      orderEntries:
        type: array
        description: List of order entries
        items:
          $ref: '#/definitions/OrderEntry'
    title: OrderEntryList
    description: Representation of an Order entry list consumed
  OrderHistory:
    type: object
    properties:
      code:
        type: string
        description: Code of Order History
      guid:
        type: string
        description: Guest user identifier
      placed:
        type: string
        format: date-time
        description: Date of placing order
      status:
        type: string
        description: Status of Order History
      statusDisplay:
        type: string
        description: Status display
      total:
        $ref: '#/definitions/Price'
    title: OrderHistory
    description: Representation of an Order History
  OrderHistoryList:
    type: object
    properties:
      orders:
        type: array
        description: List of order history items
        items:
          $ref: '#/definitions/OrderHistory'
      pagination:
        $ref: '#/definitions/deprecatedPagination'
      sorts:
        type: array
        description: List of sorts
        items:
          $ref: '#/definitions/Sort'
    title: OrderHistoryList
    description: Representation of an Order History List
  OrderStatusUpdateElement:
    type: object
    properties:
      baseSiteId:
        type: string
        description: BaseSite identifier
      code:
        type: string
        description: Code of update element of order status
      status:
        type: string
        description: Status of update element
    title: OrderStatusUpdateElement
    description: Representation of an Order Status Update Element
  OrderStatusUpdateElementList:
    type: object
    properties:
      orderStatusUpdateElements:
        type: array
        description: List of order status update elements
        items:
          $ref: '#/definitions/OrderStatusUpdateElement'
    title: OrderStatusUpdateElementList
    description: Representation of an Order Status Update Element List
  PaymentDetails:
    type: object
    properties:
      accountHolderName:
        type: string
        description: Name of account holder
      billingAddress:
        $ref: '#/definitions/Address'
      cardNumber:
        type: string
        description: Payment card number
      cardType:
        $ref: '#/definitions/CardType'
      defaultPayment:
        type: boolean
        description: Flag to mark if payment the default one
      expiryMonth:
        type: string
        description: Month of expiration of payment
      expiryYear:
        type: string
        description: Year of expiration of payment
      id:
        type: string
        description: Unique identifier of payment detail
      issueNumber:
        type: string
        description: Issue number
      saved:
        type: boolean
        description: Flag to mark if payment is saved one
      startMonth:
        type: string
        description: Start month from which payment is valid
      startYear:
        type: string
        description: Start year from which payment is valid
      subscriptionId:
        type: string
        description: Identifier of subscription
    title: PaymentDetails
    description: Representation of a Payment Details
  PaymentDetailsList:
    type: object
    properties:
      payments:
        type: array
        description: List of payment details
        items:
          $ref: '#/definitions/PaymentDetails'
    title: PaymentDetailsList
    description: Representation of a Payment details list
  PaymentMode:
    type: object
    properties:
      code:
        type: string
        description: Payment mode code
      description:
        type: string
        description: Payment mode description
      name:
        type: string
        description: Payment mode name
    title: PaymentMode
    description: Representation of a Payment Mode
  PaymentModeList:
    type: object
    properties:
      paymentModes:
        type: array
        description: List of payment modes
        items:
          $ref: '#/definitions/PaymentMode'
    title: PaymentModeList
    description: Representation of a Payment Mode List
  PaymentRequest:
    type: object
    properties:
      mappingLabels:
        type: object
        additionalProperties:
          type: string
      parameters:
        type: object
        additionalProperties:
          type: string
      postUrl:
        type: string
    title: PaymentRequest
  PickupOrderEntryGroup:
    type: object
    properties:
      deliveryPointOfService:
        $ref: '#/definitions/PointOfService'
      distance:
        type: number
        format: double
        description: Distance calculated to pickup place
      entries:
        type: array
        description: List of order entries
        items:
          $ref: '#/definitions/OrderEntry'
      quantity:
        type: integer
        format: int64
        description: Quantity of order entries in a group
      totalPriceWithTax:
        $ref: '#/definitions/Price'
    title: PickupOrderEntryGroup
    description: Representation of a Pickup Order Entry Group
  PointOfService:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      description:
        type: string
        description: Description of the point of service
      displayName:
        type: string
        description: Display name of the point of service
      distanceKm:
        type: number
        format: double
        description: Distance to the point of service as number value
      features:
        type: object
        description: List of features for a given point of service
        additionalProperties:
          type: string
      formattedDistance:
        type: string
        description: Distance to the point of service as text value
      geoPoint:
        $ref: '#/definitions/GeoPoint'
      mapIcon:
        $ref: '#/definitions/Image'
      name:
        type: string
        description: Name of the point of service
      openingHours:
        $ref: '#/definitions/OpeningSchedule'
      storeContent:
        type: string
        description: Store content of given point of service
      storeImages:
        type: array
        description: Collection of images associated with a point of service
        items:
          $ref: '#/definitions/Image'
      url:
        type: string
        description: Url address of the point of service
    title: PointOfService
    description: Representation of a Point of service
  PointOfServiceList:
    type: object
    properties:
      pointOfServices:
        type: array
        description: List of points of service
        items:
          $ref: '#/definitions/PointOfService'
    title: PointOfServiceList
    description: Representation of a Point of Service List
  PointOfServiceStock:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      description:
        type: string
        description: Description of the point of service
      displayName:
        type: string
        description: Display name of the point of service
      distanceKm:
        type: number
        format: double
        description: Distance to the point of service as number value
      features:
        type: object
        description: List of features for a given point of service
        additionalProperties:
          type: string
      formattedDistance:
        type: string
        description: Distance to the point of service as text value
      geoPoint:
        $ref: '#/definitions/GeoPoint'
      mapIcon:
        $ref: '#/definitions/Image'
      name:
        type: string
        description: Name of the point of service
      openingHours:
        $ref: '#/definitions/OpeningSchedule'
      stockInfo:
        $ref: '#/definitions/Stock'
      storeContent:
        type: string
        description: Store content of given point of service
      storeImages:
        type: array
        description: Collection of images associated with a point of service
        items:
          $ref: '#/definitions/Image'
      url:
        type: string
        description: Url address of the point of service
    title: PointOfServiceStock
    description: Representation of a Point Of Service Stock
  Price:
    type: object
    properties:
      currencyIso:
        type: string
        description: Currency iso format
      formattedValue:
        type: string
        description: Value of price formatted
      maxQuantity:
        type: integer
        format: int64
        description: Maximum quantity of the price value
      minQuantity:
        type: integer
        format: int64
        description: Minimum quantity of the price value
      priceType:
        type: string
        description: Type of the price
        enum:
        - BUY
        - FROM
      value:
        type: number
        description: Value of price in BigDecimal format
    title: Price
    description: Representation of a Price
  PriceRange:
    type: object
    properties:
      maxPrice:
        $ref: '#/definitions/Price'
      minPrice:
        $ref: '#/definitions/Price'
    title: PriceRange
    description: Representation of a Price Range
  Principal:
    type: object
    properties:
      name:
        type: string
        description: Name of the user
      uid:
        type: string
        description: Unique user identifier
    title: Principal
    description: Representation of a Principal webservice DTO used for defining User
      data types
  Product:
    type: object
    properties:
      availableForPickup:
        type: boolean
        description: Flag defining if product is available for pickup
      averageRating:
        type: number
        format: double
        description: Rating number of average value
      baseOptions:
        type: array
        description: List of base options related to the product
        items:
          $ref: '#/definitions/BaseOption'
      baseProduct:
        type: string
        description: Information about base product
      categories:
        type: array
        description: List of categories product belongs to
        items:
          $ref: '#/definitions/Category'
      classifications:
        type: array
        description: List of classifications related to the product
        items:
          $ref: '#/definitions/Classification'
      code:
        type: string
        description: Code of the product
      configurable:
        type: boolean
        description: Flag stating if product is configurable
      configuratorType:
        type: string
        description: Configurator type related to the product
      description:
        type: string
        description: Description of the product
      futureStocks:
        type: array
        description: List of future stocks
        items:
          $ref: '#/definitions/FutureStock'
      images:
        type: array
        description: List of images linked to product
        items:
          $ref: '#/definitions/Image'
      manufacturer:
        type: string
        description: Data of product manufacturer
      multidimensional:
        type: boolean
        description: Flag stating if product is multidimentional
      name:
        type: string
        description: Name of the product
      numberOfReviews:
        type: integer
        format: int32
        description: Number of reviews associated with the product
      potentialPromotions:
        type: array
        description: List of potential promotions related to the product
        items:
          $ref: '#/definitions/Promotion'
      price:
        $ref: '#/definitions/Price'
      priceRange:
        $ref: '#/definitions/PriceRange'
      productReferences:
        type: array
        description: List of product references
        items:
          $ref: '#/definitions/ProductReference'
      purchasable:
        type: boolean
        description: Flag defining if product is purchasable
      reviews:
        type: array
        description: List of reviews associated with the product
        items:
          $ref: '#/definitions/Review'
      stock:
        $ref: '#/definitions/Stock'
      summary:
        type: string
        description: Product summary
      tags:
        type: array
        description: Tags associated with the product
        items:
          type: string
      url:
        type: string
        description: Url address of the product
      variantMatrix:
        type: array
        description: List of variant matrixes associated with the product
        items:
          $ref: '#/definitions/VariantMatrixElement'
      variantOptions:
        type: array
        description: List of variant options related to the product
        items:
          $ref: '#/definitions/VariantOption'
      variantType:
        type: string
        description: Variant type of the product
      volumePrices:
        type: array
        description: List of volume prices
        items:
          $ref: '#/definitions/Price'
      volumePricesFlag:
        type: boolean
        description: Flag stating if volume price should be displayed
    title: Product
    description: Representation of a Product
  ProductExpressUpdateElement:
    type: object
    properties:
      catalogId:
        type: string
        description: Catalog identifier
      catalogVersion:
        type: string
        description: Catalog version
      code:
        type: string
        description: Code of product express update element
    title: ProductExpressUpdateElement
    description: Representation of a Product Express Update Element
  ProductExpressUpdateElementList:
    type: object
    properties:
      productExpressUpdateElements:
        type: array
        description: List of product express update element
        items:
          $ref: '#/definitions/ProductExpressUpdateElement'
    title: ProductExpressUpdateElementList
    description: Representation of a Product Express Update Element List
  ProductList:
    type: object
    properties:
      catalog:
        type: string
        description: Catalog of product list
      currentPage:
        type: integer
        format: int32
        description: Number of current page
      products:
        type: array
        description: List of products
        items:
          $ref: '#/definitions/Product'
      totalPageCount:
        type: integer
        format: int32
        description: Total page count
      totalProductCount:
        type: integer
        format: int32
        description: Total product count
      version:
        type: string
        description: Version of product list
    title: ProductList
    description: Representation of a Product List
  ProductReference:
    type: object
    properties:
      description:
        type: string
        description: Reference description
      preselected:
        type: boolean
        description: Flag stating if product reference is preselected
      quantity:
        type: integer
        format: int32
        description: Reference quantity
      referenceType:
        type: string
        description: Reference type
      target:
        $ref: '#/definitions/Product'
    title: ProductReference
    description: Representation of a Product Reference
  ProductReferenceList:
    type: object
    properties:
      references:
        type: array
        description: List of product references
        items:
          $ref: '#/definitions/ProductReference'
    title: ProductReferenceList
    description: Representation of a Product Reference List
  ProductSearchPage:
    type: object
    properties:
      breadcrumbs:
        type: array
        description: List of breadcrumbs info
        items:
          $ref: '#/definitions/Breadcrumb'
      categoryCode:
        type: string
        description: Code of category
      currentQuery:
        $ref: '#/definitions/SearchState'
      facets:
        type: array
        description: List of facets
        items:
          $ref: '#/definitions/Facet'
      freeTextSearch:
        type: string
        description: Free text search
      keywordRedirectUrl:
        type: string
        description: Redirect url address keyword
      pagination:
        $ref: '#/definitions/deprecatedPagination'
      products:
        type: array
        description: List of products
        items:
          $ref: '#/definitions/Product'
      sorts:
        type: array
        description: List of sorts
        items:
          $ref: '#/definitions/Sort'
      spellingSuggestion:
        $ref: '#/definitions/SpellingSuggestion'
    title: ProductSearchPage
    description: Representation of a Product Search Page
  Promotion:
    type: object
    properties:
      code:
        type: string
        description: Code of the promotion
      couldFireMessages:
        type: array
        description: Message about promotion which is displayed when planning potential
          promotion. This field has higher priority over promotion description
        items:
          type: string
      description:
        type: string
        description: Description of the promotion
      enabled:
        type: boolean
        description: Boolean flag if promotion is enabled
      endDate:
        type: string
        format: date-time
        description: Last date of validity of the promotion
      firedMessages:
        type: array
        description: Message fired while the promotion is active. This is info how
          much you will get when applying the promotion
        items:
          type: string
      priority:
        type: integer
        format: int32
        description: Priority index as numeric value of the promotion. Higher number
          means higher priority
      productBanner:
        $ref: '#/definitions/Image'
      promotionGroup:
        type: string
        description: Group of the promotion
      promotionType:
        type: string
        description: Type of the promotion
      restrictions:
        type: array
        description: List of promotion restrictions
        items:
          $ref: '#/definitions/PromotionRestriction'
      startDate:
        type: string
        format: date-time
        description: The initial date of the promotion
      title:
        type: string
        description: Promotion title
    title: Promotion
    description: Representation of a Promotion
  PromotionList:
    type: object
    properties:
      promotions:
        type: array
        description: List of promotions
        items:
          $ref: '#/definitions/Promotion'
    title: PromotionList
    description: Representation of a Promotion list
  PromotionOrderEntryConsumed:
    type: object
    properties:
      adjustedUnitPrice:
        type: number
        format: double
        description: Adjusted unit price for promotion order entry
      code:
        type: string
        description: Order entry code
      orderEntryNumber:
        type: integer
        format: int32
        description: Order entry number
      quantity:
        type: integer
        format: int64
        description: Quantity of promotion order entry
    title: PromotionOrderEntryConsumed
    description: Representation of a Promotion order entry consumed
  PromotionRestriction:
    type: object
    properties:
      description:
        type: string
        description: Description of the promotion restriction
      restrictionType:
        type: string
        description: Type of the promotion restriction
    title: PromotionRestriction
    description: Representation of a Promotion Restriction
  PromotionResult:
    type: object
    properties:
      consumedEntries:
        type: array
        description: List of promotion order entries consumed
        items:
          $ref: '#/definitions/PromotionOrderEntryConsumed'
      description:
        type: string
        description: Description of promotion result
      promotion:
        $ref: '#/definitions/Promotion'
    title: PromotionResult
    description: Representation of a Promotion result
  PromotionResultList:
    type: object
    properties:
      promotions:
        type: array
        description: List of promotion results
        items:
          $ref: '#/definitions/PromotionResult'
    title: PromotionResultList
    description: Representation of a Promotion result list
  Region:
    type: object
    properties:
      countryIso:
        type: string
        description: Country code in iso format
      isocode:
        type: string
        description: Country and Region code in iso format
      isocodeShort:
        type: string
        description: Region code in short iso form
      name:
        type: string
        description: Name of the region
    title: Region
    description: Response body fields which will be returned while fetching the list
      of country's regions.
  RegionList:
    type: object
    properties:
      regions:
        type: array
        description: This is the list of Region fields that should be returned in
          the response body
        items:
          $ref: '#/definitions/Region'
    title: RegionList
    description: List of Regions
  ResetPassword:
    type: object
    required:
    - newPassword
    - token
    properties:
      newPassword:
        type: string
        description: new password string which is required to complete process of
          resetting password
      token:
        type: string
        description: token value which will be generated as unique string that will
          be sent with email to allow user for completing reset-password operation
    title: ResetPassword
    description: Representation of a Reset Password
  Review:
    type: object
    properties:
      alias:
        type: string
        description: Alias name for the review
      comment:
        type: string
        description: Review comment
      date:
        type: string
        format: date-time
        description: Date of the review
      headline:
        type: string
        description: Review headline
      id:
        type: string
        description: Identifier of review
      principal:
        $ref: '#/definitions/User'
      rating:
        type: number
        format: double
        description: Review rating value
    title: Review
    description: Representation of a Review
  ReviewList:
    type: object
    properties:
      reviews:
        type: array
        description: List of reviews
        items:
          $ref: '#/definitions/Review'
    title: ReviewList
    description: Representation of a Review List
  SaveCartResult:
    type: object
    properties:
      savedCartData:
        $ref: '#/definitions/Cart'
    title: SaveCartResult
    description: Representation of a Save Cart Result
  SearchQuery:
    type: object
    properties:
      value:
        type: string
        description: Value of search query
    title: SearchQuery
    description: Representation of a Search Query
  SearchState:
    type: object
    properties:
      query:
        $ref: '#/definitions/SearchQuery'
      url:
        type: string
        description: Url address of search state
    title: SearchState
    description: Representation of a Search State
  Sort:
    type: object
    properties:
      code:
        type: string
        description: Code of Sort
      name:
        type: string
        description: Name of Sort
      selected:
        type: boolean
        description: Flag stating when Sort is selected
    title: Sort
    description: Representation a Sort option
  SpecialOpeningDay:
    type: object
    properties:
      closed:
        type: boolean
        description: Flag stating if special opening day is closed
      closingTime:
        $ref: '#/definitions/Time'
      comment:
        type: string
        description: Comment field
      date:
        type: string
        format: date-time
        description: Date of special opening day
      formattedDate:
        type: string
        description: Text representation of the date of special opening day
      name:
        type: string
        description: Name of the special opening day event
      openingTime:
        $ref: '#/definitions/Time'
    title: SpecialOpeningDay
    description: Representation of a special opening day
  SpellingSuggestion:
    type: object
    properties:
      query:
        type: string
        description: Query for spelling suggestion
      suggestion:
        type: string
        description: Spelling suggestion
    title: SpellingSuggestion
    description: Representation of a Spell Checker Suggestion
  Stock:
    type: object
    properties:
      stockLevel:
        type: integer
        format: int64
        description: Stock level expressed as number
      stockLevelStatus:
        type: string
        description: Status of stock level
    title: Stock
    description: Representation of a Stock
  StoreCount:
    type: object
    properties:
      count:
        type: integer
        format: int32
        description: Count
      isoCode:
        type: string
        description: Iso code of store
      name:
        type: string
        description: Name of store count
      storeCountDataList:
        type: array
        description: List of store counts
        items:
          $ref: '#/definitions/StoreCount'
      type:
        type: string
        description: Type of store count
    title: StoreCount
    description: Representation of a Store Count
  StoreCountList:
    type: object
    properties:
      countriesAndRegionsStoreCount:
        type: array
        description: List of store counts
        items:
          $ref: '#/definitions/StoreCount'
    title: StoreCountList
    description: Representation of a Store Count List
  StoreFinderSearchPage:
    type: object
    properties:
      boundEastLongitude:
        type: number
        format: double
        description: Bound east longitude
      boundNorthLatitude:
        type: number
        format: double
        description: Bound north latitude
      boundSouthLatitude:
        type: number
        format: double
        description: Bound south latitude
      boundWestLongitude:
        type: number
        format: double
        description: Bound west longitude
      locationText:
        type: string
        description: Location text
      pagination:
        $ref: '#/definitions/deprecatedPagination'
      sorts:
        type: array
        description: List of sortings
        items:
          $ref: '#/definitions/Sort'
      sourceLatitude:
        type: number
        format: double
        description: Source latitude
      sourceLongitude:
        type: number
        format: double
        description: Source longitude
      stores:
        type: array
        description: List of stores
        items:
          $ref: '#/definitions/PointOfService'
    title: StoreFinderSearchPage
    description: Representation of a Store finder search page
  StoreFinderStockSearchPage:
    type: object
    properties:
      boundEastLongitude:
        type: number
        format: double
        description: Bound to east longitude
      boundNorthLatitude:
        type: number
        format: double
        description: Bound to north latitude
      boundSouthLatitude:
        type: number
        format: double
        description: Bound to south latitude
      boundWestLongitude:
        type: number
        format: double
        description: Bound to west longitude
      locationText:
        type: string
        description: Location text
      pagination:
        $ref: '#/definitions/deprecatedPagination'
      product:
        $ref: '#/definitions/Product'
      sorts:
        type: array
        description: List of sorts
        items:
          $ref: '#/definitions/Sort'
      sourceLatitude:
        type: number
        format: double
        description: Source latitude
      sourceLongitude:
        type: number
        format: double
        description: Source longitude
      stores:
        type: array
        description: List of stores
        items:
          $ref: '#/definitions/PointOfServiceStock'
    title: StoreFinderStockSearchPage
    description: Representation of a Store Finder Stock Search Page
  Suggestion:
    type: object
    properties:
      value:
        type: string
        description: Suggestion value
    title: Suggestion
    description: Representation of a Suggestion
  SuggestionList:
    type: object
    properties:
      suggestions:
        type: array
        description: List of suggestions
        items:
          $ref: '#/definitions/Suggestion'
    title: SuggestionList
    description: Representation of a Suggestion List
  Time:
    type: object
    properties:
      formattedHour:
        type: string
        description: Formatted hour
      hour:
        type: integer
        format: int32
        description: Hour part of the time data
        minimum: -128
        maximum: 127
      minute:
        type: integer
        format: int32
        description: Minute part of the time data
        minimum: -128
        maximum: 127
    title: Time
    description: Representation of a Time
  Title:
    type: object
    properties:
      code:
        type: string
        description: Title code
      name:
        type: string
        description: Title name
    title: Title
    description: Representation of a Title
  TitleList:
    type: object
    properties:
      titles:
        type: array
        description: List of titles
        items:
          $ref: '#/definitions/Title'
    title: TitleList
    description: Representation of a Title List
  User:
    type: object
    properties:
      currency:
        $ref: '#/definitions/Currency'
      customerId:
        type: string
        description: Customer identifier
      deactivationDate:
        type: string
        format: date-time
        description: Deactivation date
      defaultAddress:
        $ref: '#/definitions/Address'
      displayUid:
        type: string
        description: User identifier
      firstName:
        type: string
        description: User first name
      language:
        $ref: '#/definitions/Language'
      lastName:
        type: string
        description: User last name
      name:
        type: string
        description: Name of the user
      title:
        type: string
        description: User title
      titleCode:
        type: string
        description: User title code
      uid:
        type: string
        description: Unique user identifier
    title: User
    description: Representation of an User
  UserGroup:
    type: object
    properties:
      members:
        type: array
        description: List of members
        items:
          $ref: '#/definitions/Principal'
      membersCount:
        type: integer
        format: int32
        description: Number of members
      name:
        type: string
        description: Name of the user
      subGroups:
        type: array
        description: List of subgroups
        items:
          $ref: '#/definitions/UserGroup'
      uid:
        type: string
        description: Unique user identifier
    title: UserGroup
    description: Representation of an User Group
  UserGroupList:
    type: object
    properties:
      currentPage:
        type: integer
        format: int32
        description: Current page
      numberOfPages:
        type: integer
        format: int32
        description: Number of pages
      pageSize:
        type: integer
        format: int32
        description: Page size
      totalNumber:
        type: integer
        format: int32
        description: Total number
      userGroups:
        type: array
        description: List of user groups
        items:
          $ref: '#/definitions/UserGroup'
    title: UserGroupList
    description: Representation of an User Group List
  UserSignUp:
    type: object
    required:
    - firstName
    - lastName
    - password
    - uid
    properties:
      firstName:
        type: string
        description: first name of the user
      lastName:
        type: string
        description: last name of the user
      password:
        type: string
        description: user password
      titleCode:
        type: string
      uid:
        type: string
        description: user id, unique string required to create new user. It can be
          email
    title: UserSignUp
    description: Representation of an UserSignUp. Consists of fields required to register
      new customer
  VariantCategory:
    type: object
    properties:
      hasImage:
        type: boolean
        description: Flag if varian category has image assigned
      name:
        type: string
        description: Variant category name
      priority:
        type: integer
        format: int32
        description: Priority number of variant category
    title: VariantCategory
    description: Representation of a Variant Category
  VariantMatrixElement:
    type: object
    properties:
      elements:
        type: array
        description: List of elements with the type of variant matrix element
        items:
          $ref: '#/definitions/VariantMatrixElement'
      isLeaf:
        type: boolean
      parentVariantCategory:
        $ref: '#/definitions/VariantCategory'
      variantOption:
        $ref: '#/definitions/VariantOption'
      variantValueCategory:
        $ref: '#/definitions/VariantValueCategory'
    title: VariantMatrixElement
    description: Representation of a Variant Matrix Element
  VariantOption:
    type: object
    properties:
      code:
        type: string
        description: Code of the variant option
      priceData:
        $ref: '#/definitions/Price'
      stock:
        $ref: '#/definitions/Stock'
      url:
        type: string
        description: Url address of the variant option
      variantOptionQualifiers:
        type: array
        description: List of variant option qualifiers
        items:
          $ref: '#/definitions/VariantOptionQualifier'
    title: VariantOption
    description: Representation of a Variant Option
  VariantOptionQualifier:
    type: object
    properties:
      image:
        $ref: '#/definitions/Image'
      name:
        type: string
        description: Name of variant option qualifier
      qualifier:
        type: string
        description: Qualifier
      value:
        type: string
        description: Value of variant option qualifier
    title: VariantOptionQualifier
    description: Representation of a Variant Option Qualifier
  VariantValueCategory:
    type: object
    properties:
      name:
        type: string
        description: Name of the variant value category
      sequence:
        type: integer
        format: int32
        description: Sequence number of variant value category
      superCategories:
        type: array
        description: Parent category of variant value category
        items:
          $ref: '#/definitions/VariantCategory'
    title: VariantValueCategory
    description: Representation of a Variant Value Category
  Voucher:
    type: object
    properties:
      appliedValue:
        $ref: '#/definitions/Price'
      code:
        type: string
        description: 'The identifier of the Voucher. This is the first part of voucher
          code which holds first 3 letters, like: 123'
      currency:
        $ref: '#/definitions/Currency'
      description:
        type: string
        description: Description of the voucher
      freeShipping:
        type: boolean
        description: Specifies if the order this voucher is applied to is shipped
          for free (true) or not (false). Defaults to false.
      name:
        type: string
        description: Name of the voucher
      value:
        type: number
        format: double
        description: 'Value of the voucher. Example of such value is: 15.0d'
      valueFormatted:
        type: string
        description: Formatted value of the voucher
      valueString:
        type: string
        description: 'The value of the voucher to display. Example: 15.0%'
      voucherCode:
        type: string
        description: 'Voucher code, is the holder for keeping specific occasional
          voucher related to business usage. It can be generated and looks like: 123-H8BC-Y3D5-34AL'
    title: Voucher
    description: Representation of a Voucher
  VoucherList:
    type: object
    properties:
      vouchers:
        type: array
        description: List of vouchers
        items:
          $ref: '#/definitions/Voucher'
    title: VoucherList
    description: Representation of a Voucher List
  WeekdayOpeningDay:
    type: object
    properties:
      closed:
        type: boolean
        description: Flag stating if weekday opening day is closed
      closingTime:
        $ref: '#/definitions/Time'
      openingTime:
        $ref: '#/definitions/Time'
      weekDay:
        type: string
        description: Text representation of week day opening day
    title: WeekdayOpeningDay
    description: Representation of a Weekday Opening Day
  deprecatedPagination:
    type: object
    properties:
      currentPage:
        type: integer
        format: int32
        description: The current page number. The first page is number zero (0), the
          second page is number one (1), and so on
      pageSize:
        type: integer
        format: int32
        description: The number of results per page. A page may have less results
          if there are less than a full page of results, only on the last page in
          the results
      sort:
        type: string
        description: The selected sort code
      totalPages:
        type: integer
        format: int32
        description: The total number of pages. This is the number of pages, each
          of pageSize, required to display the totalResults.
      totalResults:
        type: integer
        format: int64
        description: The total number of matched results across all pages
    title: deprecatedPagination
    description: Representation of a search results pagination
  error:
    type: object
    properties:
      errorCode:
        type: string
        description: Error code
      message:
        type: string
        description: Descriptive, human readable error message.
      reason:
        type: string
        description: Additional classification specific for each error type e.g. 'noStock'.
      subject:
        type: string
        description: Identifier of the related object e.g. '1'.
      subjectType:
        type: string
        description: Type of the object related to the error e.g. 'entry'.
      type:
        type: string
        description: Type of the error e.g. 'LowStockError'.
    title: error
    description: Error message
  errorList:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
    title: errorList
    description: List of errors
x-sap-api-type: REST
x-sap-shortText: Enables you to manage all of the common commerce functionality.
x-sap-stateInfo:
  state: Active
x-servers:
- templates:
    url:
      description: SAP Commerce Cloud server URL where the application is deployed.
  description: Commerce Webservices v2 REST API endpoint
  url: https://{url}/rest/v2
security:
- oauth2_client_credentials:
  - extended
